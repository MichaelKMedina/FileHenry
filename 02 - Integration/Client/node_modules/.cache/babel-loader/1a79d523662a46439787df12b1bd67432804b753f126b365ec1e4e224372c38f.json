{"ast":null,"code":"const validation = (data, funcError, dataError) => {\n  const emailRegex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n  const passRegex = /[0-9]/;\n  const {\n    email,\n    password\n  } = data;\n  if (!email) funcError({\n    ...dataError,\n    email: 'Campo vacio'\n  });else {\n    if (email.length < 36) {\n      if (emailRegex.test(email)) funcError({\n        ...dataError,\n        email: ''\n      });else {\n        funcError({\n          ...dataError,\n          email: 'Email invalido'\n        });\n      }\n    } else {\n      funcError({\n        ...dataError,\n        email: 'No ingrese mas de 35 caracteres'\n      });\n    }\n  }\n  /*if(!password) funcError({...dataError, password:'Campo vacio'});\r\n  else{\r\n      if(password.length >= 6 || password.length <= 10){\r\n          if(passRegex.test(password)) funcError({...dataError, password:''});\r\n          else{\r\n              funcError({...dataError, password:'La clave debe tener al menos un numero'});\r\n          }\r\n      }\r\n      else{funcError({...dataError, password:'La clave debe tener entra 6 y 8 caracteres'});}\r\n  }*/\n};\n\nexport default validation;","map":{"version":3,"names":["validation","data","funcError","dataError","emailRegex","passRegex","email","password","length","test"],"sources":["C:/Users/mmedina30/Music/HENRY/FileHenry/02 - Integration/src/components/Form/validation.js"],"sourcesContent":["\r\nconst validation = (data, funcError, dataError) => {\r\n    const emailRegex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n    const passRegex = /[0-9]/;\r\n    const { email, password } = data;\r\n    \r\n    if(!email) funcError({...dataError, email:'Campo vacio'});\r\n    else{\r\n        if(email.length < 36){\r\n            if(emailRegex.test(email)) funcError({...dataError, email:''});\r\n            else{\r\n                funcError({...dataError, email:'Email invalido'});\r\n            }\r\n        }\r\n        else{funcError({...dataError, email:'No ingrese mas de 35 caracteres'});}\r\n    }\r\n    /*if(!password) funcError({...dataError, password:'Campo vacio'});\r\n    else{\r\n        if(password.length >= 6 || password.length <= 10){\r\n            if(passRegex.test(password)) funcError({...dataError, password:''});\r\n            else{\r\n                funcError({...dataError, password:'La clave debe tener al menos un numero'});\r\n            }\r\n        }\r\n        else{funcError({...dataError, password:'La clave debe tener entra 6 y 8 caracteres'});}\r\n    }*/\r\n};\r\n\r\nexport default validation;"],"mappings":"AACA,MAAMA,UAAU,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,SAAS,KAAK;EAC/C,MAAMC,UAAU,GAAG,2DAA2D;EAC9E,MAAMC,SAAS,GAAG,OAAO;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGN,IAAI;EAEhC,IAAG,CAACK,KAAK,EAAEJ,SAAS,CAAC;IAAC,GAAGC,SAAS;IAAEG,KAAK,EAAC;EAAa,CAAC,CAAC,CAAC,KACtD;IACA,IAAGA,KAAK,CAACE,MAAM,GAAG,EAAE,EAAC;MACjB,IAAGJ,UAAU,CAACK,IAAI,CAACH,KAAK,CAAC,EAAEJ,SAAS,CAAC;QAAC,GAAGC,SAAS;QAAEG,KAAK,EAAC;MAAE,CAAC,CAAC,CAAC,KAC3D;QACAJ,SAAS,CAAC;UAAC,GAAGC,SAAS;UAAEG,KAAK,EAAC;QAAgB,CAAC,CAAC;MACrD;IACJ,CAAC,MACG;MAACJ,SAAS,CAAC;QAAC,GAAGC,SAAS;QAAEG,KAAK,EAAC;MAAiC,CAAC,CAAC;IAAC;EAC5E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,eAAeN,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}