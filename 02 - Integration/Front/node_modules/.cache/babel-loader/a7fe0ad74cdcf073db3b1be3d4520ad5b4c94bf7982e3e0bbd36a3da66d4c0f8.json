{"ast":null,"code":"const validate = (formData, setError, errorMessages) => {\n  const {\n    email,\n    password\n  } = formData;\n  const isEmailValid = email => {\n    const emailRegex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n    return emailRegex.test(email);\n  };\n  if (!email) {\n    setError({\n      ...errorMessages,\n      email: 'Campo vacío'\n    });\n  } else if (email.length > 35) {\n    setError({\n      ...errorMessages,\n      email: 'No ingrese más de 35 caracteres'\n    });\n  } else if (!isEmailValid(email)) {\n    setError({\n      ...errorMessages,\n      email: 'Email inválido'\n    });\n  } else {\n    setError({\n      ...errorMessages,\n      email: ''\n    });\n  }\n  if (!password) {\n    setError({\n      ...errorMessages,\n      password: 'Campo vacío'\n    });\n  } else if (password.length < 6 || password.length > 10) {\n    setError({\n      ...errorMessages,\n      password: 'La clave debe tener entre 6 y 10 caracteres'\n    });\n  } else if (!password.includes('0-9')) {\n    setError({\n      ...errorMessages,\n      password: 'La clave debe tener al menos un número'\n    });\n  } else {\n    setError({\n      ...errorMessages,\n      password: ''\n    });\n  }\n};\nexport default validate;","map":{"version":3,"names":["validate","formData","setError","errorMessages","email","password","isEmailValid","emailRegex","test","length","includes"],"sources":["C:/Users/maico/Desktop/CarpetaHenry/02 - Integration/src/components/Form/validation.js"],"sourcesContent":["const validate = (formData, setError, errorMessages) => {\r\n    const { email, password } = formData;\r\n  \r\n    const isEmailValid = (email) => {\r\n      const emailRegex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n      return emailRegex.test(email);\r\n    };\r\n  \r\n    if (!email) {\r\n      setError({ ...errorMessages, email: 'Campo vacío' });\r\n    } else if (email.length > 35) {\r\n      setError({ ...errorMessages, email: 'No ingrese más de 35 caracteres' });\r\n    } else if (!isEmailValid(email)) {\r\n      setError({ ...errorMessages, email: 'Email inválido' });\r\n    } else {\r\n      setError({ ...errorMessages, email: '' });\r\n    }\r\n  \r\n    if (!password) {\r\n      setError({ ...errorMessages, password: 'Campo vacío' });\r\n    } else if (password.length < 6 || password.length > 10) {\r\n      setError({ ...errorMessages, password: 'La clave debe tener entre 6 y 10 caracteres' });\r\n    } else if (!password.includes('0-9')) {\r\n      setError({ ...errorMessages, password: 'La clave debe tener al menos un número' });\r\n    } else {\r\n      setError({ ...errorMessages, password: '' });\r\n    }\r\n  };\r\n  \r\n  export default validate;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,KAAK;EACpD,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGJ,QAAQ;EAEpC,MAAMK,YAAY,GAAIF,KAAK,IAAK;IAC9B,MAAMG,UAAU,GAAG,2DAA2D;IAC9E,OAAOA,UAAU,CAACC,IAAI,CAACJ,KAAK,CAAC;EAC/B,CAAC;EAED,IAAI,CAACA,KAAK,EAAE;IACVF,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEC,KAAK,EAAE;IAAc,CAAC,CAAC;EACtD,CAAC,MAAM,IAAIA,KAAK,CAACK,MAAM,GAAG,EAAE,EAAE;IAC5BP,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEC,KAAK,EAAE;IAAkC,CAAC,CAAC;EAC1E,CAAC,MAAM,IAAI,CAACE,YAAY,CAACF,KAAK,CAAC,EAAE;IAC/BF,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEC,KAAK,EAAE;IAAiB,CAAC,CAAC;EACzD,CAAC,MAAM;IACLF,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;EAC3C;EAEA,IAAI,CAACC,QAAQ,EAAE;IACbH,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEE,QAAQ,EAAE;IAAc,CAAC,CAAC;EACzD,CAAC,MAAM,IAAIA,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACI,MAAM,GAAG,EAAE,EAAE;IACtDP,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEE,QAAQ,EAAE;IAA8C,CAAC,CAAC;EACzF,CAAC,MAAM,IAAI,CAACA,QAAQ,CAACK,QAAQ,CAAC,KAAK,CAAC,EAAE;IACpCR,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEE,QAAQ,EAAE;IAAyC,CAAC,CAAC;EACpF,CAAC,MAAM;IACLH,QAAQ,CAAC;MAAE,GAAGC,aAAa;MAAEE,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC9C;AACF,CAAC;AAED,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}